type Item {
  id: ID!
  title: String!
  description: String
  shelf: Shelf
  quantity: NonNegativeInt!
  expiry: Date!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input NewItemInput {
  title: String!
  description: String
  shelfId: String
  quantity: NonNegativeInt!
  expiry: Date!
}

input UpdateItemInput {
  id: ID!
  title: String
  description: String
  shelfId: String
  quantity: NonNegativeInt
  expiry: Date
}

type ItemResponse {
  item: Item
  query: Query
}

type ItemsResponse {
  items: [Item]!
  query: Query
}

type Query {
  getItem(id: ID!): ItemResponse
  items: ItemsResponse
}

type Mutation {
  addItem(input: NewItemInput!): ItemResponse
  updateItem(input: UpdateItemInput!): ItemResponse
  deleteItem(id: ID!): ItemResponse
}
